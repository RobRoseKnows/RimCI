name: Build

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'README.md'
    tags-ignore:
      # This will ignore release versions tagged with a version identifier. We'll 
      # use a separate workflow for them.
      - 'v*'
    # If you don't want to build on a pull_request, then remove this, but it is 
    # kind of helpful.
  pull_request:
    paths-ignore: 
      - README.md

jobs:
  build:
    name: Build on ${{ matrix.operating-system }}
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        # You can configure operating systems to build on here. It shouldn't make a difference 
        operating-system: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Set Environment Variables
      # This is a special syntax for GitHub Actions that sets an environment
      # variable. See: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      run: |
        echo "::set-env name=SLN_FOLDER::$_SLN_FOLDER"
      env: 
        # Change this to point to your solution, or the folder in which your
        # solution can be found.
        _SLN_FOLDER: Source/

    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Setup Dotnet
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.x
      
    - name: Install Mod Dependencies
      run: dotnet restore $SLN_FOLDER

    - name: Build Mod
      run: dotnet build $SLN_FOLDER --configuration Release --no-restore

    # I don't know how well testing will work without Rimworld actually installed. 
    # But if you have unit tests configured to work with dotnet, you may be able 
    # to uncomment this and add a testing step.
    # - name: Test Mod
    #   run: dotnet test $SLN_FOLDER --no-restore --verbosity normal

    # There is no `zip` command on windows so you need to use tar.
    # - name: Zip-up Mod
    #   run: tar --exclude="*." -zcvf dist.tar.gz About/ Assemblies/ Defs/ Languages/ Patches/ RimCI/ Sounds/ Textures/

    # To modify this with your own directory structure, just change the paths to 
    # whatever you want. It will not upload any empty directories, those with only
    # hidden files will also be excluded.
    - name: Upload Mod Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.operating-system }}
        path: |
          About/
          Assemblies/
          Defs/
          Languages/
          LICENSE
          LoadFolders.xml
          Patches/
          Sounds/
          Source/
          Textures/
          !**/.*
        # This final path is to exclude hidden files such as .gitkeep and .DS_STORE. 
        # I would recommend keeping it, but I don't think it will break anything if 
        # you remove or modify it.